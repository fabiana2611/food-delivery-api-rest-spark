{
  "swagger": "2.0",
  "info": {
    "description": "This is a example of an API of food delivery.A CRUD usig spark java. ",
    "version": "0.0.1",
    "title": "Food Delivery API - Spark Study",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "fabiana2611@hotmail.com"
    },
    "license": {
      "name": "Apache 2",
      "url": "https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)"
    }
  },
  "host": "localhost:4567",
  "basePath": "/",
  "tags": [
    {
      "name": "users",
      "description": "CRUD about users"
    }
  ],
  "schemes": [
    "http"
  ],
  "parameters": {
    "user-id": {
      "name": "id",
      "in": "path",
      "description": "user id",
      "type": "integer",
      "format": "int32",
      "required": true
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get a list of users",
        "description": "Get a list of users.",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "headers": {
              "Location": {
                "description": "uri new user",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/users/new": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "description": "Create a new user",
        "operationId": "newUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/getUser/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by user id",
        "description": "Get user by user id",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "description": "uri user",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/deleteUser/{id}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/user-id"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid userId supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "active": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        },
        "roleId": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}